# .github/workflows/docker-publish.yml
name: Docker Publish - Plex Exporter

on:
  push:
    tags: [ "v*.*.*" ] # Trigger on version tags like v2025.04.16, v2025.06.04 (year.day.month)

jobs:
  build_and_push:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    permissions:
      contents: read # Allow reading repository content
      packages: write # Allow writing Docker packages (needed for GHCR, good practice)

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4 # Use the latest checkout action

      # 2. Set up Docker Buildx
      # Buildx enables advanced build features
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Log in to Docker Hub
      # Uses secrets stored in GitHub repository settings
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Extract metadata (tags, labels) for Docker
      # Automatically generates tags based on git events (branch, tag, sha)
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: djcoombes/plex-exporter
          tags: |
            # tag latest for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # tag based on git tag (e.g., v1.0.0)
            type=ref,event=tag
            # tag based on git sha (short)
            type=sha,prefix=,suffix=,format=short

      # 5. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory as build context
          file: ./Dockerfile
          push: true # Actually push the image
          tags: |
            # Always tag with 'latest'
            type=raw,value=latest
            # Use the git tag as version (e.g., v2025.04.17)
            type=semver,pattern={{version}}
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by metadata-action
          cache-from: type=gha # Enable GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max

      # 6. Update Docker Hub repository description
      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: djcoombes/plex-exporter
          short-description: "Prometheus exporter for Plex Media Server"
          readme-filepath: ./README.md # Path to the README file to use as the description